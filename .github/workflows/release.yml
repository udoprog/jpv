name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'nightly'
        type: choice
        options:
        - nightly
        - "%date"
  push:
    tags:
    - '*'

env:
  KICK_VERSION: "%{git.tag} || ${{github.event.inputs.version}} || nightly"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    - uses: Swatinem/rust-cache@v2
    - uses: udoprog/trunk-action@v1
      with:
        args: build --release
    - uses: actions/upload-artifact@v4
      with:
        name: dist-frontend
        path: crates/web/dist

  fedora:
    runs-on: ubuntu-latest
    needs: frontend
    strategy:
      fail-fast: false
      matrix:
        fedora: ["40", "41"]
    container:
      image: fedora:${{matrix.fedora}}
    steps:
    - run: cat /etc/fedora-release
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with: {name: dist-frontend, path: crates/web/dist}
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: dnf install --assumeyes gcc rpm-build glib2-devel openssl-devel tesseract-devel leptonica-devel clang-devel git
    - uses: udoprog/kick@nightly
    - run: kick define --github-action
      id: release
    - run: cargo build --release --features gnome,bundle -p jpv
      env:
        JPV_VERSION: ${{steps.release.outputs.version}}
    - run: kick rpm --append fc${{matrix.fedora}} --output dist
    - uses: actions/upload-artifact@v4
      with:
        name: dist-fedora-${{matrix.fedora}}
        path: dist

  windows:
    runs-on: windows-latest
    needs: frontend
    steps:
    - uses: udoprog/kick@nightly
    - run: kick define --github-action --msi-version-to msi_version
      id: release
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with: {name: dist-frontend, path: crates/web/dist}
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo build --release --features bundle -p jpv
      env:
        JPV_VERSION: ${{steps.release.outputs.version}}
        JPV_MSI_VERSION: ${{steps.release.outputs.msi_version}}
    - run: kick msi --output dist
    - uses: actions/upload-artifact@v4
      with:
        name: dist-windows
        path: dist

  publish:
    permissions: write-all
    needs: [fedora, windows]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with: {pattern: "dist-*", merge-multiple: true, path: dist}
    - uses: udoprog/kick@nightly
    - run: kick github-release --github-action --upload "dist/*"
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
